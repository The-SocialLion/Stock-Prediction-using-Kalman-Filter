# -*- coding: utf-8 -*-
"""SPPKF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11S2Ot7tn_oDQI-uQhlUv0mxkeQuPSJYY

#**Stock  Price Prediction using Kalman Filter**
"""

! pip install yfinance
! pip install pykalman

import yfinance as yf
data = yf.download("FB", start="2017-01-01", end="2021-06-13")
data.head()

from pykalman import KalmanFilter
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Construct a Kalman filter
kf = KalmanFilter(transition_matrices = [1],    # The value for At. It is a random walk so is set to 1.0
                  observation_matrices = [1],   # The value for Ht.
                  initial_state_mean = 0,       # Any initial value. It will converge to the true state value.
                  initial_state_covariance = 1, # Sigma value for the Qt in Equation (1) the Gaussian distribution
                  observation_covariance=1,     # Sigma value for the Rt in Equation (2) the Gaussian distribution
                  transition_covariance=.01)    # A small turbulence in the random walk parameter 1.0
# Get the Kalman smoothing
state_means, _ = kf.filter(data['Adj Close'].values)

# Call it KF_mean
data['KF_mean'] = np.array(state_means)
data.head()

data[['Adj Close','KF_mean']].plot()
plt.title('Kalman Filter estimates for FaceBook')
plt.legend(['FB','Kalman Estimate'])
plt.rcParams["figure.figsize"] = (20,10)
plt.xlabel('Day')
plt.ylabel('Price')